name: Build
on: [push, pull_request]

jobs:
  build_on_linux:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@master
      with:
        node-version: 16
    - id: get_version
      name: Get Version
      run: echo "version=$(node -p 'require(`./package.json`).version')" >> "$GITHUB_OUTPUT"
    - name: install dependencies
      run: npm install
    - name: build
      run: npm run build
    - uses: actions/upload-artifact@v3
      if: success()
      name: Linux (DEB)
      with:
        name: SMP-Deb-v${{ steps.get_version.outputs.version }}.deb
        path: |
          dist/SMP-*.deb
    - uses: actions/upload-artifact@v3
      if: success()
      name: Linux (AppImage)
      with:
        name: SMP-AppImage-v${{ steps.get_version.outputs.version }}.AppImage
        path: |
          dist/SMP-*.AppImage

  build_on_mac:
    runs-on: macos-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@master
      with:
        node-version: 16
    - id: get_version
      name: Get Version
      run: echo "version=$(node -p 'require(`./package.json`).version')" >> "$GITHUB_OUTPUT"
    - name: install dependencies
      run: npm install
    - name: build
      run: npm run build
    - uses: actions/upload-artifact@v3
      if: success()
      name: Upload Mac Distribution
      with:
        name: SMP-Darwin-v${{ steps.get_version.outputs.version }}.dmg
        path: dist/SMP-*.dmg

  build_on_win:
    runs-on: windows-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@master
      with:
        node-version: 16
    - id: get_version
      name: Get Version
      run: echo "version=$(node -p 'require(`./package.json`).version')" >> "$GITHUB_OUTPUT"
    - name: install dependencies
      run: npm install
    - name: build
      run: npm run build
    - uses: actions/upload-artifact@v3
      if: success()
      name: Upload Windows Distribution
      with:
        name: SMP-Win-v${{ steps.get_version.outputs.version }}.exe
        path: |
          dist/SMP-win-*.exe
          !dist/SMP-win-ia32-*.exe
          !dist/SMP-win-x64-*.exe
